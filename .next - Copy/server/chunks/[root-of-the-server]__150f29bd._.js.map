{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Jayesh/OneDrive/Desktop/BizNest/cafe-management-system/models/User.ts"],"sourcesContent":["import mongoose, { Schema, Document, models } from \"mongoose\";\r\n\r\nexport interface IUser extends Document {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  role: \"customer\" | \"staff\" | \"admin\";\r\n}\r\n\r\nconst UserSchema = new Schema<IUser>(\r\n  {\r\n    name: { type: String, required: true },\r\n    email: { type: String, required: true, unique: true },\r\n    password: { type: String, required: true },\r\n    role: {\r\n      type: String,\r\n      enum: [\"customer\", \"staff\", \"admin\"],\r\n      default: \"customer\",\r\n    },\r\n  },\r\n  { timestamps: true }\r\n);\r\n\r\nconst User = models.User || mongoose.model<IUser>(\"User\", UserSchema);\r\nexport default User;\r\n"],"names":[],"mappings":";;;;AAAA;;AASA,MAAM,aAAa,IAAI,mHAAM,CAC3B;IACE,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,MAAM;QACJ,MAAM;QACN,MAAM;YAAC;YAAY;YAAS;SAAQ;QACpC,SAAS;IACX;AACF,GACA;IAAE,YAAY;AAAK;AAGrB,MAAM,OAAO,mHAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAQ,QAAQ;uCAC3C","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Jayesh/OneDrive/Desktop/BizNest/cafe-management-system/lib/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst MONGODB_URI = process.env.MONGODB_URI as string;\r\n\r\nif (!MONGODB_URI) {\r\n  throw new Error(\"❌ Please define MONGODB_URI in .env.local\");\r\n}\r\n\r\nlet isConnected = false;\r\n\r\nexport async function dbConnect() {\r\n  if (isConnected) return;\r\n\r\n  try {\r\n    await mongoose.connect(MONGODB_URI);\r\n    isConnected = true;\r\n    console.log(\"✅ MongoDB connected\");\r\n  } catch (error) {\r\n    console.error(\"❌ MongoDB connection failed:\", error);\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,cAAc;AAEX,eAAe;IACpB,IAAI,aAAa;IAEjB,IAAI;QACF,MAAM,oHAAQ,CAAC,OAAO,CAAC;QACvB,cAAc;QACd,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;IAChD;AACF","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Jayesh/OneDrive/Desktop/BizNest/cafe-management-system/app/api/auth/register/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport bcrypt from \"bcryptjs\"; // ✅ using bcryptjs (safer for Next.js & Vercel)\r\nimport User from \"@/models/User\";\r\nimport { dbConnect } from \"@/lib/db\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    await dbConnect();\r\n    const { name, email, password, role } = await req.json();\r\n\r\n    // Check if user already exists\r\n    const existingUser = await User.findOne({ email });\r\n    if (existingUser) {\r\n      return NextResponse.json(\r\n        { error: \"User already exists\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Hash password\r\n    const hashedPassword = await bcrypt.hash(password, 10);\r\n\r\n    // Create user\r\n    const user = await User.create({\r\n      name,\r\n      email,\r\n      password: hashedPassword,\r\n      role: role || \"customer\", // default role\r\n    });\r\n\r\n    return NextResponse.json(\r\n      { message: \"User registered successfully\", user },\r\n      { status: 201 }\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Register Error:\", error);\r\n    return NextResponse.json({ error: \"Server error\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA,wOAA+B,gDAAgD;AAC/E;AACA;;;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,IAAA,wHAAS;QACf,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,IAAI;QAEtD,+BAA+B;QAC/B,MAAM,eAAe,MAAM,2HAAI,CAAC,OAAO,CAAC;YAAE;QAAM;QAChD,IAAI,cAAc;YAChB,OAAO,gJAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,gBAAgB;QAChB,MAAM,iBAAiB,MAAM,8IAAM,CAAC,IAAI,CAAC,UAAU;QAEnD,cAAc;QACd,MAAM,OAAO,MAAM,2HAAI,CAAC,MAAM,CAAC;YAC7B;YACA;YACA,UAAU;YACV,MAAM,QAAQ;QAChB;QAEA,OAAO,gJAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAgC;QAAK,GAChD;YAAE,QAAQ;QAAI;IAElB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mBAAmB;QACjC,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpE;AACF","debugId":null}}]
}